name: Build/Test Cyclus

on:
  # allows us to run workflows manually
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '.github/workflows/build_test_publish.yml'
      - '.github/workflows/changelog_test.yml'
      - 'docker/**'
      - 'doc/**'
      - 'CHANGELOG.rst'
  push:
    paths-ignore:
      - '.github/workflows/build_test_publish.yml'
      - '.github/workflows/changelog_test.yml'
      - 'docker/**'
      - 'doc/**'
      - 'CHANGELOG.rst'

jobs:
  build-test-cyclus:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        ubuntu_versions : [
          20.04,
          22.04,
        ]
        pkg_mgr : [
          apt,
          conda,
        ]
    
    container:
      image: ghcr.io/cyclus/cyclus_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/${{ matrix.pkg_mgr }}-deps

    steps:

      - name: Build Cyclus
        uses: bennibbelink/cyclus-ci-action@v1.0.1
        with:
          repository: cyclus/cyclus
          repository-ref: ${{ github.sha }}
          artifact-out-name: cyclus-${{ matrix.ubuntu_versions }}-${{ matrix.pkg_mgr }}
          artifact-out-tag: ghcr.io/cyclus/cyclus_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/${{ matrix.pkg_mgr }}
          dockerfile-path: docker/cyclus.dockerfile
          docker-build-args: |
            pkg_mgr=${{ matrix.pkg_mgr }}
            ubuntu_version=${{ matrix.ubuntu_versions }}

  downstream-cycamore:
    runs-on: ubuntu-latest
    needs: build-test-cyclus
    if: ${{ github.event_name == 'pull_request' }}
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        ubuntu_versions : [
          20.04,
          22.04,
        ]
        pkg_mgr : [
          apt,
          conda,
        ]

    steps:
      - name: Build Cycamore
        id: build-cycamore
        uses: bennibbelink/cyclus-ci-action@v1.0.1
        with:
          repository: cyclus/cycamore
          repository-ref: main
          artifact-in-name: cyclus-${{ matrix.ubuntu_versions }}-${{ matrix.pkg_mgr }}
          artifact-out-name: cycamore-${{ matrix.ubuntu_versions }}-${{ matrix.pkg_mgr }}
          artifact-out-tag: ghcr.io/cyclus/cycamore_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/${{ matrix.pkg_mgr }}
          dockerfile-path: docker/Dockerfile
          docker-build-args: |
            pkg_mgr=${{ matrix.pkg_mgr }}
            ubuntu_version=${{ matrix.ubuntu_versions }}
      
      - name: Failure Warning
        if: steps.build-cycamore.outcome != 'success'
        run: |
          echo "::warning title=Downstream Failure::Cycamore Build/Test Failed"


  downstream-cymetric:
    runs-on: ubuntu-latest
    needs: [build-test-cyclus, downstream-cycamore]
    if: ${{ github.event_name == 'pull_request' }}
    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        ubuntu_versions : [
          20.04,
          22.04,
        ]
        pkg_mgr : [
          apt,
          conda,
        ]

    steps:
      - name: Build Cymetric
        id: build-cymetric
        uses: bennibbelink/cyclus-ci-action@v1.0.1
        with:
          repository: cyclus/cymetric
          repository-ref: main
          artifact-in-name: cycamore-${{ matrix.ubuntu_versions }}-${{ matrix.pkg_mgr }}
          artifact-out-name: cymetric-${{ matrix.ubuntu_versions }}-${{ matrix.pkg_mgr }}
          artifact-out-tag: ghcr.io/cyclus/cymetric_${{ matrix.ubuntu_versions }}_${{ matrix.pkg_mgr }}/${{ matrix.pkg_mgr }}
          dockerfile-path: docker/Dockerfile
          docker-build-args: |
            pkg_mgr=${{ matrix.pkg_mgr }}
            ubuntu_version=${{ matrix.ubuntu_versions }}

      - name: Failure Warning
        if: steps.build-cymetric.outcome != 'success'
        run: |
          echo "::warning title=Downstream Failure::Cymetric Build/Test Failed"
